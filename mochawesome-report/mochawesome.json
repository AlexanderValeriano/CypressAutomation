{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-02T16:01:24.131Z",
    "end": "2024-01-02T16:01:36.488Z",
    "duration": 12357,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "685568f2-a4b2-4035-9762-9ed6d88c0e65",
      "title": "",
      "fullFile": "cypress/e2e/3-exemplesRahulShetty/Test10BuildCustomizeCommand&ReusingCode.cy.js",
      "file": "cypress/e2e/3-exemplesRahulShetty/Test10BuildCustomizeCommand&ReusingCode.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "744b0a75-2354-4175-83c2-7488324092c7",
          "title": "Validate attribute properties with Hook DDT Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ValidatingAttributePropertiesAndBehavior",
              "fullTitle": "Validate attribute properties with Hook DDT Test Suite ValidatingAttributePropertiesAndBehavior",
              "timedOut": null,
              "duration": 9656,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//***** Ideally until 10 seconds - If tou need to apply a config time to a specific test ***//\n// Cypress.config(\"pageLoadTimeout\", 8000);\nconst homePage = new _HomePage.default();\nconst productPage = new _ProductPage.default();\ncy.visit(Cypress.env(\"url\") + \"/angularpractice/\");\nhomePage.getEditBox().type(userdata.name);\nhomePage.getTwoWaysBinding().should(\"have.value\", userdata.name);\nhomePage.getGender().select(userdata.gender);\nhomePage.getEditBox().should(\"have.attr\", \"minlength\", \"2\");\nhomePage.getEntrepreneaur().should(\"be.disabled\");\n// ****** If i apply before getShopBUtton this config apply only here   ****//\n// Cypress.config(\"pageLoadTimeout\", 8000);\nhomePage.getShopTab().click();\nuserdata.productName.forEach(element => {\n  cy.selectProduct(element);\n});\nproductPage.CheckOutButton().click();\n//**   declare variables for assertion **//\nlet sum = 0;\n// *** Assertion **//\ncy.get(\"tr td:nth-child(4) strong\").each(($el, i, $list) => {\n  //** First : Extract text ***/\n  // cy.log($el.text());\n  //** Second : Recupere only value from text and use trim for remove espaces ***/\n  const actualText = $el.text();\n  let res = actualText.split(\" \");\n  res = res[1].trim();\n  sum = Number(sum) + Number(res);\n}).then(() => {\n  cy.log(sum);\n});\n//** Thirth compare with the total */\ncy.get(\"h3 strong\").then(el => {\n  const amountTotal = el.text();\n  let res = amountTotal.split(\" \");\n  let total = res[1].trim();\n  total = Number(total);\n  // cy.log(total);\n  expect(total).to.equal(sum);\n});\ncy.contains(\"Checkout\").click();\ncy.get(\"#country\").type(\"India\");\ncy.get(\".suggestions > ul > li > a\").click();\ncy.get(\"#checkbox2\").click({\n  force: true\n});\ncy.get(\"input[type='submit']\").click();\n// cy.get(\".alert\").should(\n//   \"have.text\",\n//   \"Success! Thank you! Your order will be delivered in next few weeks :-).             \"\n// );\ncy.get(\".alert\").then(el => {\n  const actualtext = el.text();\n  // ** Alternative way to solve that using chai assertions **\n  expect(actualtext.includes(\"Success\")).to.be.true;\n});",
              "err": {},
              "uuid": "4b52a4a9-40d1-494e-a62f-e43fa27f6813",
              "parentUUID": "744b0a75-2354-4175-83c2-7488324092c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b52a4a9-40d1-494e-a62f-e43fa27f6813"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}